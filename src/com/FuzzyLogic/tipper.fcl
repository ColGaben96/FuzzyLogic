/*
	Example: A tip calculation FIS (fuzzy inference system)
	Calculates tip based on 'service' and 'food'

									Pablo Cingolani 
*/

FUNCTION_BLOCK tipper	// Block definition (there may be more than one block per file)

// Define input variables
VAR_INPUT				
	dropping : REAL;
	experience : REAL;
END_VAR

// Define output variable
VAR_OUTPUT				
	victory : REAL;
END_VAR

// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
FUZZIFY dropping			
	TERM low := (0, 1) (4, 0) ; 
	TERM middle := (1, 0) (4,1) (6,1) (9,0);
	TERM high := (6, 0) (9, 1);
END_FUZZIFY

// Fuzzify input variable 'food': { 'rancid', 'delicious' }
FUZZIFY experience			
	TERM low := (0, 1) (3,0) ;
	TERM medium:= (3,0) (3,1) (5,0);
	TERM multiplied := (5,0) (9,1);
END_FUZZIFY

// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
DEFUZZIFY victory			
	TERM defeat := (1,0) (5,0);
	TERM draw := (0,3) (4,1) (0,5);
	TERM victory := (0,5) (8,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

// Inference rules
RULEBLOCK No1
	AND : MIN;	// Use 'min' for 'and'
	ACT : MIN;	// Use 'min' activation method
	ACCU : MAX;	// Use 'max' accumulation method

	RULE 1 : IF dropping IS low OR experience IS low THEN victory IS defeat;
	RULE 2 : IF dropping IS middle AND experience IS middle THEN victory IS draw; 
	RULE 3 : IF dropping IS high AND experience IS multiplied THEN victory IS victory;
END_RULEBLOCK

END_FUNCTION_BLOCK